

<!DOCTYPE html>
<html>
<head>
  <title>Trip Planner</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
  <style>
    #map { height: 400px; margin-top: 10px; }
  </style>
</head>
<body>
  <h2>Trip Planner</h2>
  <label for="from">From:</label>
  <input type="text" id="from" placeholder="Enter origin city or town">
  <label for="to">To:</label>
  <input type="text" id="to" placeholder="Enter destination city or town">
  <label for="mode">Mode of Transport:</label>
  <select id="mode">
    <option value="driving-car">Driving</option>
    <option value="cycling-regular">Cycling</option>
    <option value="foot-walking">Walking</option>
  </select>
  <button onclick="planTrip()">Plan Trip</button>
  <div id="map"></div>
  <pre id="output"></pre>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    var map = L.map('map').setView([51.505, -0.09], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var fromMarker, toMarker, routeLayer;

    function geocodeAddress(address, callback) {
      var geocodeUrl = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json`;
      fetch(geocodeUrl)
        .then(response => response.json())
        .then(data => {
          if (data.length > 0) {
            callback([data[0].lon, data[0].lat]); // [lon, lat]
          } else {
            alert("Address not found: " + address);
          }
        })
        .catch(error => {
          console.error("Error fetching geocode:", error);
          alert("Error fetching geocode.");
        });
    }

    function planTrip() {
      var from = document.getElementById('from').value;
      var to = document.getElementById('to').value;
      var mode = document.getElementById('mode').value;

      if (!from || !to) {
        alert("Please enter both origin and destination.");
        return;
      }

      geocodeAddress(from, function(fromCoords) {
        geocodeAddress(to, function(toCoords) {
          if (fromMarker) map.removeLayer(fromMarker);
          if (toMarker) map.removeLayer(toMarker);
          if (routeLayer) map.removeLayer(routeLayer);

          fromMarker = L.marker([fromCoords[1], fromCoords[0]]).addTo(map).bindPopup('Origin').openPopup();
          toMarker = L.marker([toCoords[1], toCoords[0]]).addTo(map).bindPopup('Destination').openPopup();

          var routeUrl = `https://api.openrouteservice.org/v2/directions/${mode}?api_key=b78de67a9657d460f627095476f17ebb&start=${fromCoords[0]},${fromCoords[1]}&end=${toCoords[0]},${toCoords[1]}`;

          fetch(routeUrl)
            .then(response => response.json())
            .then(data => {
              if (data.features && data.features.length > 0) {
                var coords = data.features[0].geometry.coordinates;
                var latlngs = coords.map(coord => [coord[1], coord[0]]);
                routeLayer = L.polyline(latlngs, { color: 'blue' }).addTo(map);
                map.fitBounds(routeLayer.getBounds());

                var summary = data.features[0].properties.segments[0];
                document.getElementById('output').textContent = `Distance: ${summary.distance.toFixed(2)} meters
Duration: ${summary.duration.toFixed(0)} seconds`;
              } else {
                alert("No route found.");
              }
            })
            .catch(error => {
              console.error("Error fetching route:", error);
              alert("Error fetching route.");
            });
        });
      });
    }
  </script>
</body>
</html>
